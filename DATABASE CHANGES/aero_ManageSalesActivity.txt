ALTER PROCEDURE [dbo].[aero_ManageSalesActivity] 
@Operation INT = NULL,
@Id INT = NULL,
@StakeHolderId INT = NULL,
@CompanyId INT = NULL,	
@ActivityId INT = NULL,
@Date DATE = NULL,
@Date1 DATE = NULL,
@Objective VARCHAR(500) = NULL,
@Outcome VARCHAR(500) = NULL,
@ActivityDetailId INT = NULL,
@Task VARCHAR(500) = NULL,
@ResponsiblePerson INT = NULL,	
@Deadline VARCHAR(500) = NULL,	
@Status INT = NULL,	
@Destination VARCHAR(500) = NULL,
@Purpose VARCHAR(500) = NULL,
@UserID INT = NULL,
@TypeOfContact VARCHAR(1) = NULL,
@PNumber VARCHAR(20) = NULL,
@ProjectName VARCHAR(250) = NULL,
@NextFollowupDate DATETIME = NULL,
@RegionalIndustryUpdates VARCHAR(500) = NULL,	
@msg CHAR(50) = '' OUTPUT
AS
BEGIN
	SET NOCOUNT ON;
	IF(@Operation = 1)--BIND CONTROL
	BEGIN
		DECLARE @StakeHolders TABLE (
			ID INT,
			[text] VARCHAR(50)
		);

		INSERT INTO @StakeHolders (ID, [text])
		VALUES 
			(1, 'Consultant'),
			(2, 'Customer'),
			(3, 'Dealer'),
			(4, 'Rep');  			

		DECLARE @StatusTable TABLE (
			ID INT,
			[text] VARCHAR(50)
		);

		INSERT INTO @StatusTable (ID, [text])
		VALUES 
			(1, 'In Progress'),
			(2, 'Pending'),
			(3, 'Hold'),
			(4, 'Complete'),
			(5, 'Cancelled');  

		SELECT id, [text]
		FROM @StakeHolders;	

		SELECT id, [text]
		FROM @StatusTable;

		SELECT EmployeeID AS id, CONCAT(FirstName, ' ' + LastName) AS [text]
		FROM tblEmployees
		WHERE FirstName IS NOT NULL AND Department='SD' AND Active=1
		OR EmployeeID=263
		ORDER BY FirstName

		SELECT CASE WHEN ISNULL(CountryId, 0) <> 19 THEN 1 ELSE 0 END AS Permission
		FROM tblEmployees
		WHERE EmployeeID = @UserID
	END

	ELSE IF(@Operation = 2)--BIND COMPANY NAME
	BEGIN
		IF(@StakeHolderId = 1)
		BEGIN
			SELECT ConsultantID AS id, CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + Country) AS [text]
			FROM tblConsultants
			LEFT JOIN tblStates ON tblStates.StateID = tblConsultants.StateID
			WHERE ISNULL(CompanyName, '') <> ''
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + Country)						
		END

		ELSE IF(@StakeHolderId = 2)
		BEGIN
			SELECT CustomerID AS id, CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + tblCountries.Country) AS [text]
			FROM tblCustomers
			LEFT JOIN tblStates ON tblStates.StateID = tblCustomers.StateID
			LEFT JOIN tblCountries ON tblCountries.CountryID = tblCustomers.CountryID
			WHERE ISNULL(CompanyName, '') <> ''
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + tblCountries.Country)
		END

		ELSE IF(@StakeHolderId = 3)
		BEGIN
			SELECT DealerID AS id, CONCAT(CompanyName, ', ' + tblStates.[State], ', ' + tblDealers.Country) AS [text]
			FROM tblDealers
			LEFT JOIN tblStates ON tblStates.StateID = tblDealers.StateID
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State], ', ' + tblDealers.Country)
		END

		ELSE IF(@StakeHolderId = 4)
		BEGIN
			SELECT BranchID AS id, CONCAT(dbo.ProperCase(CompanyName), ', ' + BranchLocation, ', ' + BranchName) AS [text]
			FROM tblHobartBranchListing
			INNER JOIN tblHobartRegions ON tblHobartRegions.RegionID = tblHobartBranchListing.RegionID
			WHERE ISNULL(RepGroupID, 0) <> 0 AND ISNULL(CompanyName, '') <> ''
			ORDER BY CompanyName, StreetAddress
		END
	END

	ELSE IF(@Operation = 20)--BIND COMPANY NAME FOR HEADER
	BEGIN
		IF(@StakeHolderId = 1)
		BEGIN
			SELECT ConsultantID AS id, CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + Country) AS [text]
			FROM tblConsultants
			LEFT JOIN tblStates ON tblStates.StateID = tblConsultants.StateID
			INNER JOIN Sales_Activity ON Sales_Activity.Companyid = tblConsultants.ConsultantID AND StakeHolderid = @StakeHolderId
			WHERE ISNULL(CompanyName, '') <> ''
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + Country)						
		END

		ELSE IF(@StakeHolderId = 2)
		BEGIN
			SELECT CustomerID AS id, CONCAT(CompanyName, ', ' + tblStates.[State],  ', ' + tblCountries.Country) AS [text]
			FROM tblCustomers
			LEFT JOIN tblStates ON tblStates.StateID = tblCustomers.StateID
			LEFT JOIN tblCountries ON tblCountries.CountryID = tblCustomers.CountryID
			INNER JOIN Sales_Activity ON Sales_Activity.Companyid = tblCustomers.CustomerID AND StakeHolderid = @StakeHolderId
			WHERE ISNULL(CompanyName, '') <> ''
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State], ', ' + tblCountries.Country)
		END

		ELSE IF(@StakeHolderId = 3)
		BEGIN
			SELECT DealerID AS id, CONCAT(CompanyName, ', ' + tblStates.[State], ', ' + tblDealers.Country) AS [text]
			FROM tblDealers
			LEFT JOIN tblStates ON tblStates.StateID = tblDealers.StateID
			INNER JOIN Sales_Activity ON Sales_Activity.Companyid = tblDealers.DealerID AND StakeHolderid = @StakeHolderId
			ORDER BY CONCAT(CompanyName, ', ' + tblStates.[State], ', ' + tblDealers.Country)
		END

		ELSE IF(@StakeHolderId = 4)
		BEGIN
			SELECT BranchID AS id, CONCAT(dbo.ProperCase(CompanyName), ', ' + BranchLocation, ', ' + BranchName) AS [text]
			FROM tblHobartBranchListing
			INNER JOIN tblHobartRegions ON tblHobartRegions.RegionID = tblHobartBranchListing.RegionID
			INNER JOIN Sales_Activity ON Sales_Activity.Companyid = tblHobartBranchListing.BranchID AND StakeHolderid = @StakeHolderId
			WHERE ISNULL(RepGroupID, 0) <> 0 AND ISNULL(CompanyName, '') <> ''
			ORDER BY CompanyName, StreetAddress
		END
	END

	ELSE IF(@Operation = 3)--GET SELECTED COMPANY NAME INFO
	BEGIN
		IF(@StakeHolderId = 1)
		BEGIN
			SELECT TOP 1 Country, tblStates.[State], City, StreetAdd AS StreetAddress
			FROM tblConsultants
			LEFT JOIN tblStates ON tblStates.StateID = tblConsultants.StateID
			WHERE ConsultantID = @CompanyId
		END

		ELSE IF(@StakeHolderId = 2)
		BEGIN
			SELECT TOP 1 tblCountries.Country, tblStates.[State], City, StreetAddress
			FROM tblCustomers
			LEFT JOIN tblStates ON tblStates.StateID = tblCustomers.StateID
			LEFT JOIN tblCountries ON tblCountries.CountryID = tblCustomers.CountryID	
			WHERE CustomerID = @CompanyId
		END

		ELSE IF(@StakeHolderId = 3)
		BEGIN
			SELECT TOP 1 Country, tblStates.[State], City, StreetAddress
			FROM tblDealers
			LEFT JOIN tblStates ON tblStates.StateID = tblDealers.StateID
			WHERE DealerID = @CompanyId
		END

		ELSE IF(@StakeHolderId = 4)
		BEGIN
			SELECT TOP 1 Country, tblStates.[State], City, StreetAddress
			FROM tblHobartBranchListing
			INNER JOIN tblHobartRegions ON tblHobartRegions.RegionID = tblHobartBranchListing.RegionID
			LEFT JOIN tblCountries ON tblCountries.CountryID = tblHobartBranchListing.CountryID
			LEFT JOIN tblStates ON tblStates.StateID = tblHobartBranchListing.StateID
			WHERE ISNULL(RepGroupID, 0) <> 0 AND tblHobartBranchListing.BranchID = @CompanyId
		END
	END

	ELSE IF(@Operation = 4)--INSERT FOR ACTIVITY.
	BEGIN
		BEGIN TRY
		BEGIN TRANSACTION
			SET @Id = (SELECT ID FROM Sales_Activity WHERE StakeHolderid = @StakeHolderId AND Companyid = @CompanyId)

			IF NOT EXISTS(SELECT 1 FROM Sales_ActivityDetails INNER JOIN Sales_Activity ON Sales_ActivityDetails.ActivityId = Sales_Activity.Id
						WHERE Sales_Activity.StakeHolderid = @StakeHolderId AND Companyid = @CompanyId AND Sales_ActivityDetails.UserID = @UserID AND Sales_ActivityDetails.[Date] = @Date)
			BEGIN
				IF(ISNULL(@Id, 0) = 0)
				BEGIN
					INSERT INTO Sales_Activity (StakeHolderid, Companyid)
					VALUES(@StakeHolderId, @CompanyId)

					SET @Id = SCOPE_IDENTITY()
				END
			
				INSERT INTO Sales_ActivityDetails(ActivityId, [Date], Objective, Outcome, UserID)
				VALUES(@Id, @Date, @Objective, @Outcome, @UserID)

				SET @msg = SCOPE_IDENTITY()
			END
			ELSE
			BEGIN
				SET @msg = 'ER01'
			END
		IF @@TRANCOUNT > 0
				COMMIT			
		END TRY

		BEGIN CATCH 
		IF @@TRANCOUNT > 0
				ROLLBACK
			SET @msg = ''
		END CATCH		
	END

	ELSE IF(@Operation = 5)--UPDATE FOR ACTIVITY
	BEGIN
		IF NOT EXISTS(SELECT 1 FROM Sales_ActivityDetails INNER JOIN Sales_Activity ON Sales_ActivityDetails.ActivityId = Sales_Activity.Id
						WHERE Sales_Activity.StakeHolderid = @StakeHolderId AND Companyid = @CompanyId AND Sales_ActivityDetails.[Date] = @Date AND UserID = @UserID AND Sales_ActivityDetails.ID <> @Id)
		BEGIN
			UPDATE Sales_ActivityDetails SET [DATE] = @Date, Objective = @Objective, Outcome = @Outcome, UserID = @UserID
			WHERE Id = @Id

			SET @msg = @Id
		END
		ELSE
		BEGIN
			SET @msg = 'ER01'
		END
	END

	ELSE IF(@Operation = 6)--BIND ACTIVITY GRID
	BEGIN
		SELECT Sales_ActivityDetails.ID, CONVERT(VARCHAR, [Date], 101) AS [Date], [Objective], [Outcome], CONCAT(tblEmployees.FirstName, ' ' + tblEmployees.LastName) AS SalesManager
		FROM Sales_ActivityDetails
		INNER JOIN Sales_Activity ON Sales_ActivityDetails.ActivityId = Sales_Activity.Id
		LEFT JOIN tblEmployees ON tblEmployees.EmployeeID = Sales_ActivityDetails.UserID
		WHERE Sales_Activity.StakeHolderid = @StakeHolderId AND Companyid = @CompanyId AND UserID = @UserID
		ORDER BY [DATE] DESC
	END

	ELSE IF(@Operation = 7)--GET ACTIVITY DETAILS FOR SINGLE ACTIVITY
	BEGIN
		SELECT CONVERT(VARCHAR, [Date], 101) AS [Date], Objective, Outcome
		FROM Sales_ActivityDetails
		WHERE ID = @Id
	END

	ELSE IF(@Operation = 8)--BIND RESPONSIBLE PERSON LIST
	BEGIN
		IF(@StakeHolderId = 1)
		BEGIN
			SELECT ConsultantMemberID AS id, CONCAT(FirstName, ' ' + LastName) AS [text]
			FROM tblConsultantMembers
			WHERE ConsultantID = @Id
			ORDER BY CONCAT(FirstName, ' ' + LastName)
		END

		ELSE IF(@StakeHolderId = 2)
		BEGIN
			SELECT tblCustMember.ContactID AS id, CONCAT(FName, ' ' + LName) AS [text]
			FROM tblCustMember
			WHERE CustomerID = @Id
			ORDER BY CONCAT(FName, ' ' + LName)
		END

		ELSE IF(@StakeHolderId = 3)
		BEGIN
			SELECT ContactID AS id, CONCAT(FName, ' ' + LName) AS [text]
			FROM tblDealerMember
			WHERE DealerID = @Id
			ORDER BY CONCAT(FName, ' ' + LName)
		END

		ELSE IF(@StakeHolderId = 4)
		BEGIN
			SELECT RepID AS id, CONCAT(FirstName, ' ' + LastName) AS [text]
			FROM tblHobartListing
			WHERE BranchID = @Id
			ORDER BY CONCAT(FirstName, ' ' + LastName)
		END
	END

	ELSE IF(@Operation = 9)--BIND FOLLOWUP GRID
	BEGIN
		SELECT Sales_ActivityFollowups.Id, CONVERT(VARCHAR, Sales_ActivityFollowups.[Date], 101) AS [Date], Task, Deadline, 
		CASE 
			WHEN Sales_ActivityFollowups.[Status] = 1 THEN 'In Progress' 
			WHEN Sales_ActivityFollowups.[Status] = 2 THEN 'Pending'
			WHEN Sales_ActivityFollowups.[Status] = 3 THEN 'Hold'
			WHEN Sales_ActivityFollowups.[Status] = 4 THEN 'Complete'
			WHEN Sales_ActivityFollowups.[Status] = 5 THEN 'Cancelled' 
		END AS [Status], 
		CASE 
			WHEN Sales_Activity.[StakeHolderid] = 1 THEN CONCAT(tblConsultantMembers.FirstName, ' ' + tblConsultantMembers.LastName) 
			WHEN Sales_Activity.[StakeHolderid] = 2 THEN CONCAT(tblCustMember.FName, ' ' + tblCustMember.LName)
			WHEN Sales_Activity.[StakeHolderid] = 3 THEN CONCAT(tblDealerMember.FName, ' ' + tblDealerMember.LName)
			WHEN Sales_Activity.[StakeHolderid] = 4 THEN CONCAT(tblHobartListing.FirstName, ' ' + tblHobartListing.LastName)
		END AS ResponsiblePerson
		FROM Sales_ActivityFollowups
		INNER JOIN Sales_ActivityDetails ON Sales_ActivityFollowups.ActivityDetailId = Sales_ActivityDetails.Id
		INNER JOIN Sales_Activity ON Sales_ActivityDetails.ActivityId = Sales_Activity.Id
		LEFT JOIN tblConsultantMembers ON tblConsultantMembers.ConsultantMemberID = Sales_ActivityFollowups.ResponsiblePerson
		LEFT JOIN tblCustMember ON tblCustMember.ContactID = Sales_ActivityFollowups.ResponsiblePerson
		LEFT JOIN tblDealerMember ON tblDealerMember.ContactID = Sales_ActivityFollowups.ResponsiblePerson
		LEFT JOIN tblHobartListing ON tblHobartListing.RepID = Sales_ActivityFollowups.ResponsiblePerson
		WHERE Sales_ActivityFollowups.ActivityDetailId = @ActivityDetailId
		ORDER BY Sales_ActivityFollowups.[DATE] DESC
	END

	ELSE IF(@Operation = 10)--INSERT FOLLOWUP
	BEGIN
		INSERT INTO Sales_ActivityFollowups(ActivityDetailId, [Date], Task, TypeOfContact, PNumber, ProjectName, ResponsiblePerson, Deadline, [Status], NextFollowupDate, RegionalIndustryUpdates)
		VALUES(@ActivityDetailId, @Date, @Task, @TypeOfContact, @PNumber, @ProjectName, @ResponsiblePerson, @Deadline, @Status, @NextFollowupDate, @RegionalIndustryUpdates)

		SET @msg = SCOPE_IDENTITY()
	END

	ELSE IF(@Operation = 11)--GET SINGLE FOLLOWUP INFO
	BEGIN
		SELECT CONVERT(VARCHAR, [Date], 101) AS [Date], [Task], TypeOfContact, PNumber, ProjectName, [ResponsiblePerson], Deadline, [Status], CONVERT(VARCHAR, [NextFollowupDate], 101) AS [NextFollowupDate], RegionalIndustryUpdates
		FROM Sales_ActivityFollowups
		WHERE ID = @Id
	END

	ELSE IF(@Operation = 12)--UPDATE FOLLOWUP
	BEGIN
		UPDATE Sales_ActivityFollowups SET [Date] = @Date, Task = @Task, ResponsiblePerson = @ResponsiblePerson, Deadline = @Deadline, [Status] = @Status,
		TypeOfContact = @TypeOfContact, PNumber = @PNumber, ProjectName = @ProjectName, NextFollowupDate = @NextFollowupDate, RegionalIndustryUpdates = @RegionalIndustryUpdates
		WHERE ID = @Id

		SET @msg = @Id
	END

	ELSE IF(@Operation = 13)--BIND TRAVEL LOGS
	BEGIN
		SELECT id, CONVERT(VARCHAR, [Date], 101) AS [Date], Destination, Purpose, Outcome
		FROM Sales_ActivityTravelLogs
		WHERE ActivityDetailId = @ActivityDetailId
		ORDER BY ID DESC
	END

	ELSE IF(@Operation = 14)--INSERT TRAVEL LOGS
	BEGIN
		INSERT INTO Sales_ActivityTravelLogs(ActivityDetailId, [Date], Purpose, Destination, Outcome)
		VALUES(@ActivityDetailId, @Date, @Purpose, @Destination, @Outcome)

		SET @msg = SCOPE_IDENTITY()
	END

	ELSE IF(@Operation = 15)--GET SINGLE TRAVEL LOG INFO
	BEGIN
		SELECT CONVERT(VARCHAR, [Date], 101) AS [Date], Purpose, Destination, Outcome
		FROM Sales_ActivityTravelLogs
		WHERE ID = @Id
	END

	ELSE IF(@Operation = 16)--UPDATE TRAVEL LOG
	BEGIN
		UPDATE Sales_ActivityTravelLogs SET [Date] = @Date, Purpose = @Purpose, Destination= @Destination, Outcome = @Outcome
		WHERE ID = @Id

		SET @msg = @Id
	END

	ELSE IF(@Operation = 17)--DELETE ACTIVITY
	BEGIN
		IF NOT EXISTS(SELECT 1 FROM Sales_ActivityFollowups WHERE ActivityDetailId = @Id)
		BEGIN
			IF NOT EXISTS(SELECT 1 FROM Sales_ActivityTravelLogs WHERE ActivityDetailId = @Id)
			BEGIN
				DELETE FROM Sales_ActivityDetails 
				WHERE Id = @Id

				SET @msg = 'Activity deleted successfully !!'
			END
			ELSE
			BEGIN
				SET @msg = 'ER02'
			END
		END
		ELSE
		BEGIN
			SET @msg = 'ER01'
		END
	END

	ELSE IF(@Operation = 18)--DELETE FOLLOWUP
	BEGIN
		DELETE FROM Sales_ActivityFollowups
		WHERE Id = @Id

		SET @msg = 'Followup deleted successfully !!'
	END

	ELSE IF(@Operation = 19)--DELETE TRAVEL LOGS
	BEGIN
		DELETE FROM Sales_ActivityTravelLogs
		WHERE Id = @Id

		SET @msg = 'Travel deleted successfully !!'
	END

	ELSE IF(@Operation = 21)--REPORT
	BEGIN
		SELECT SA.Id AS ActivityID, SAD.Id AS ActivityDetailID,
		CASE WHEN SA.StakeHolderid = 1 THEN 'Consultant' WHEN SA.StakeHolderid = 2 THEN 'Customer' WHEN SA.StakeHolderid = 3 THEN 'Dealer' WHEN SA.StakeHolderid = 4 THEN 'Rep' END AS Stakeholder, 
		CASE 
			WHEN SA.StakeHolderid = 1 THEN C.CompanyName
			WHEN SA.StakeHolderid = 2 THEN CU.CompanyName
			WHEN SA.StakeHolderid = 3 THEN D.CompanyName
			WHEN SA.StakeHolderid = 4 THEN B.CompanyName
		END AS [Company],
		CONVERT(VARCHAR, SAD.[Date], 101) AS [ActivityDate], SAD.Objective, SAD.Outcome, CONCAT(tblEmployees.FirstName, ' ' + tblEmployees.LastName) AS SalesManager
		FROM Sales_ActivityDetails SAD
		INNER JOIN Sales_Activity SA ON SA.Id = SAD.ActivityId
		LEFT JOIN tblConsultants C ON C.ConsultantID = SA.Companyid AND SA.StakeHolderid = 1
		LEFT JOIN tblCustomers CU ON CU.CustomerID = SA.Companyid AND SA.StakeHolderid = 2
		LEFT JOIN tblDealers D ON D.DealerID = SA.Companyid AND SA.StakeHolderid = 3
		LEFT JOIN tblHobartBranchListing B ON B.BranchID = SA.Companyid AND SA.StakeHolderid = 4
		LEFT JOIN tblEmployees ON tblEmployees.EmployeeID = SAD.UserID
		WHERE SAD.[Date] BETWEEN @Date AND @Date1
		AND (ISNULL(@StakeHolderId, 0) = 0 OR SA.StakeHolderid = @StakeHolderId)
		AND (ISNULL(@CompanyId, 0) = 0 OR (SA.Companyid = @CompanyId))
		AND (ISNULL(@UserID, 0) = 0 OR (tblEmployees.EmployeeID = @UserID))
		ORDER BY ActivityDate
	END	
END
